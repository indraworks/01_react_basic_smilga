//catatan utk pretier kita pilih formatOnSave dan formatOnPaste centang OK


tenang react skrng versi yg baru 17 kita unsintall saja 
unistall create-react-app -g 
jadi nntisupaya jika update reactnya bisa utk versi yg terbaru 
bisa di baca di create-react-app npm 

nah tentang jsx jadi gini react ini adalah kumpulan2 dari componet2 
(kita menyebutnya sebagai compinent)
yg mana dirender docmpactkan olet tools reat 
jadi component ini adalah sbuah function yg pnya kembalian return 
nah didalam return ini kita tulis html2 tag2 kita  nah 
harus ada 1 bua div kluaran 
nah syaratnya harus import react from react dan 
utk merendernya harus import ReactDOM from 'react-dom 
nah nnti kita akan gunakan ReactDOM.render utk merender function kita tsb 
nah kita arahkan di bagian html dan settingnya udah default yaitu d tag id="root" 
disana d rendernya 
berikut ini pemaparan diatas :
 syarat jsx :
//harus 
import React from 'react';
import ReactDOM from 'react-dom' 

RULE JS


////catatan mini Book Project ////
sekaran kit aganti function utamanya 
nah nanti kita akan buat semacam card ambil data dari image dari amazon
utk title dan lainy akita tentukan sendiri
jadi ada buku 
imge buku ,harga buku author 
nah utk booklist merupaka umpulan dari individu2 component /function sbd:
ingat component adalah function yg berisi tag html yg return 

function BookList () {
    return ( 
        <BookTitle/>
        <image/>
        <author/>
        <
    )
}


////////////JS didalam JSX ////////////////

bisa gak javascript nuilis di dalam jsx ?
bisa syaratnya harus didalam kalang {} dan mereka yg didalam adalah expressi 
apa itu expressi dibawah ini!:
Expressions
An expression is any valid set of literals, variables, operators, and expressions that evaluates to a single value. The value may be a number, a string, or a logical value. Conceptually, there are two types of expressions: those that assign a value to a variable, and those that simply have a value. For example, the expression

x = 7

is an expression that assigns x the value 7. This expression itself evaluates to 7. Such expressions use assignment operators. On the other hand, the expression

3 + 4

simply evaluates to 7; it does not perform an assignment. The operators used in such expressions are referred to simply as operators.

JavaScript has the following kinds of expressions:

Arithmetic: evaluates to a number, for example
String: evaluates to a character string, for example "Fred" or "234"
Logical: evaluates to true or false
The special keyword null denotes a null value. In contrast, variables that have not been assigned a value are undefined, and cannot be used without a run-time error.

Conditional Expressions
A conditional expression can have one of two values based on a condition. The syntax is

(condition) ? val1 : val2
If condition is true, the expression has the value of val1, Otherwise it has the value of val2. You can use a conditional expression anywhere you would use a standard expression.

For example,

status = (age >= 18) ? "adult" : "minor"
This statement assigns the value "adult" to the variable status if age is eighteen or greater. Otherwise, it assigns the value "minor" to status.
=================================end penjelasan expressi ==================

///tentan props ////
props hanay conventional name aslinay bisa apa aja sebarang nama parameter yg pasang 
dalam function component di JSX
function Book(props) {

}
//saya kasih  nama parameternya esDawet 
//gak masalah tapi ya kita harus ikut convensional dari acuan yg ada!
const rapikanTheme =(esDawet)=> {
    return ( )
}
dan ingat paramnya itu adalah object ya?! jadi bukan variable ini hanya berlaku di react utk component ini 

//nah props sbgai parameter bisa di destruting dan bisa langusng di destructing di 
dalam kruung tempat parameter atau props berada 
 contoh :
 const morning=({props})=> {
     //const {title,price,img} = prop // yg ini sama dgn diatas ({props})
 }

/*Props Children 
props children apa ini ?? nah ini dia dia itu adalah merupakan 
sbuah property paramter yg berada di dalam tag2 yg akan dimasuki 
parameter di jsx componentn 
pada contoh diatas kita punya jxsx cmponent Book kita masukan
nilai param mis title,author,img kedalam jsx componet lewat props
nah ini kan dari external nah si children ini dia builtin ada dalam rpops

kalaiu kita mau masukan maka dia harus berada di tengah apit dari tag2 jsx componetn
contoh diatas mis <Book title={Title} author={Author} img={Image}> nah sichilden doinsi tempatnya!   </Book>
nah sichilder harus berada diapit 
kit amenpyebutnya props anak atau props children namanya builtin 
jadi bia dconsole.log jadi akan keluar 2 object 1 log,utk props parameter (title,img,author)
nahutk childrennya kita tulis sama namanya children 
<Book> hai children </Bok>

nah dari BookLis =()=> {
  <Book title={Title} author={Author} img={Image}> <p>Lorem</p><Book>
}

                                       | ini jangan lupa dimaskan sbgai param ( childrenya)
nah pada Book =({img,title,author,children})=> {return ()}
nah kalau yg biasa bisa juga ditulis



Book =(props)=> {
  
  return (

    {children}  <---janga lupa penulisanya harus tanda kurung kurawal 
    //krn dia berada dalam jsx terserah kalau penempatanya bebas saja 
    // didalam jsx mau diatas dibawah tengah kiri  kanan gak msalah terserah yg punya web!

  )}

  nah nulis chidlrennya terserah diwiayah jsx ,mau ditas di bawah ata u kiri kanan terserah 
  {{children}} atau {{props.children }}

  diatas sengaja pake destucto ug laa 
  const {} = props 
  nah diconsole.log(props) isinya pada console.log:
  author: "Cindy Patikasari"
children: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Deserunt, voluptate!"
image: "https://images-na.ssl-images-amazon.com/images/I/81Jg8HF-N1L._AC_UL127_SR127,127_.jpg"
title: "Mrah Putih Indonesia"
jadi si children ini builtini didalam props jadi dia parameter ini namany fix
dia mesti diapit oleh tag maka disebut props.children

*/

/* 3 FUCNTION PADA EVENT DI REACT 
syarat utk sbuah event adalah :
1 adanya atribute ,eventHandler
2.pnggunaan camelcase utk functionya
3.//kita pakai contoh onClick , onMouseOver
bedanya apa function sebgai reference dan inline direct
10 kalau functio sebgai reference  maka
 functionya itu ada dluar jsx bisa dbuat di atas return(){}
 jadi diluar jsx ,sbb js ada dlm kalang return
 nah nnti tinggal panggil nama functionyanya contoh 
 kita buat button di jsx
 <Button onClick={doAlert}  > reference </Button>
 jadi jika sbgai reference hamya tnggal panggi nama unction diluar js
 const doAlert =()=> {
   alert("hello saya reference nich")
 }

//nah ada jug ayg inline langusng yaitu fucntionya tak renference
/tigernya degan anomius function
onMouseOver={()=>alert("ini langsung function choi")}



//INVOKE FUNCTION !yaitu funtion dengan passing paramter !
1.si function di tulis di luar jsx 
2.di invoke artinya si functiondipanggil dgn inline dan ditulis paramternya !
//nah ada jug ayg denga melwatkan parameter ATAU DENGAN PASS ARUGMENT
SYARATNYA APA??
nah mesti diketahui harus denga tanda krung {} calibrace dan harus dgn inline function 
gak boleh dgn reference saja jadi inline ya!!dan di pass argumentnya di function inlien ini!
contoh saya mau kluarkan props author jadi speicif percard kalau dgn refernce bahaya smuanya dikluarkan 
nilai2 taddi bukan tempat atau index sicard ini jadi skelalig lagi syaratnya 
harus dgn inline function dan paramternya ditulis !! 
dan jangan lupa boleh ditulis itu isifunctionya didalam inline tadi atau diluar 

contoh: ini ditulis di atas return 
  const passingProps =(Author)=> {
    alert( `hello ini passing ${Author}`)
  }

ini tulis dgn inline yg artinya invoke!
<Button onClick={()=>passingProps(Author)}
 



*/
